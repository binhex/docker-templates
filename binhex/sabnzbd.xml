<?xml version="1.0" encoding="utf-8"?>
<Containers>
  <TemplateURL>https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/sabnzbd.xml</TemplateURL>
  <Beta>False</Beta>
  <Category>Downloaders:</Category>
  <Name>binhex-sabnzbd</Name>
  <Description>
    [b]Description[/b][br]
    SABnzbd is an Open Source Binary Newsreader written in Python. SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.[br][br]
    [b]Configuration[/b][br]
    [b]/config[/b] This is where the application will store its configuration files, database and logs etc.[br]
    [b]/data[/b] This path is used retrieve the downloaded files by your downloader application.[br][br]
    [b]Documentation[/b][br]
    https://github.com/binhex/documentation[br][br]
  </Description>
  <Overview>
    SABnzbd is an Open Source Binary Newsreader written in Python. SABnzbd makes Usenet as simple and streamlined as possible by automating everything we can. All you have to do is add an .nzb. SABnzbd takes over from there, where it will be automatically downloaded, verified, repaired, extracted and filed away with zero human interaction.
  </Overview>
  <Support>http://forums.unraid.net/index.php?topic=45821.0</Support>
  <ReadMe>https://github.com/binhex/documentation</ReadMe>
  <Registry>https://registry.hub.docker.com/r/binhex/arch-sabnzbd/</Registry>
  <GitHub>https://github.com/binhex/arch-sabnzbd</GitHub>
  <Repository>ghcr.io/binhex/arch-sabnzbd</Repository>
  <Project>http://sabnzbd.org/</Project>
  <BindTime>true</BindTime>
  <Privileged>false</Privileged>
  <Networking>
    <Mode>bridge</Mode>
    <Publish>
      <Port>
        <HostPort>8080</HostPort>
        <ContainerPort>8080</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
      <Port>
        <HostPort>8090</HostPort>
        <ContainerPort>8090</ContainerPort>
        <Protocol>tcp</Protocol>
      </Port>
    </Publish>
  </Networking>
  <Environment>
    <Variable>
      <Name>UMASK</Name>
      <Value>000</Value>
    </Variable>
    <Variable>
      <Name>PUID</Name>
      <Value>99</Value>
    </Variable>
    <Variable>
      <Name>PGID</Name>
      <Value>100</Value>
    </Variable>
  </Environment>
  <Data>
    <Volume>
      <HostDir>/mnt/user/appdata/config</HostDir>
      <ContainerDir>/config</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
    <Volume>
      <HostDir>/mnt/user/appdata/data</HostDir>
      <ContainerDir>/data</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
  </Data>
  <WebUI>http://[IP]:[PORT:8080]/</WebUI>
  <Icon>https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/sabnzbd-icon.png</Icon>
  <DonateText>If you appreciate my work, then please consider buying me a beer :D</DonateText>
  <DonateLink>https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=MM5E27UX6AUU4</DonateLink>
  <DonateImg>https://www.paypal.com/en_US/i/btn/btn_donate_SM.gif</DonateImg>
  <ExtraParams></ExtraParams>
</Containers>
