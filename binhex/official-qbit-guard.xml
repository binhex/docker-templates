<?xml version="1.0"?>
<Container version="2">
    <Name>binhex-official-qbit-guard</Name>
	<Beta>false</Beta>
    <Category>Downloaders: Other:</Category>
    <Repository>ghcr.io/GEngines/qbit-guard</Repository>
    <Registry>https://github.com/GEngines/qbit-guard/pkgs/container/qbit-guard</Registry>
    <Network>bridge</Network>
    <Privileged>false</Privileged>
    <PrivilegedReq>false</PrivilegedReq>
    <ExtraParams></ExtraParams>
    <Shell>bash</Shell>
    <GitHub>https://github.com/GEngines/qbit-guard</GitHub>
    <Support>https://github.com/GEngines/qbit-guard/issues</Support>
    <Project>https://github.com/GEngines/qbit-guard</Project>
    <Overview>A zero-dependency Python guard for qBittorrent that blocks pre-air TV episodes (Sonarr), deletes ISO/BDMV-only torrents, and auto-blocklists bad releases in Sonarr/Radarr (with dedupe + queue failover). Runs on "torrent added", fetches metadata safely, and logs everything to stdout.</Overview>
    <WebUI></WebUI>
    <TemplateURL>https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/official-qbit-guard.xml</TemplateURL>
    <Icon>https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/official-qbit-guard-icon.png</Icon>
    <DonateText>If you appreciate my work, then please consider buying me a beer :D</DonateText>
    <DonateLink>https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=MM5E27UX6AUU4</DonateLink>
    <DonateImg>https://www.paypal.com/en_US/i/btn/btn_donate_SM.gif</DonateImg>
    <Date>1970-01-01</Date>
    <Changes></Changes>
    <Config Name="Variable: QBIT_HOST" Target="QBIT_HOST" Default="http://127.0.0.1:8080" Description="qBittorrent WebUI URL" Type="Variable" Display="always" Required="true" Mask="false"/>
    <Config Name="Variable: QBIT_USER" Target="QBIT_USER" Default="admin" Description="qBittorrent WebUI username" Type="Variable" Display="always" Required="true" Mask="false"/>
    <Config Name="Variable: QBIT_PASS" Target="QBIT_PASS" Default="adminadmin" Description="qBittorrent WebUI password" Type="Variable" Display="always" Required="true" Mask="true"/>
    <Config Name="Variable: QBIT_ALLOWED_CATEGORIES" Target="QBIT_ALLOWED_CATEGORIES" Default="radarr,tv-sonarr" Description="Comma-separated list of categories to process" Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="Variable: QBIT_DELETE_FILES" Target="QBIT_DELETE_FILES" Default="true" Description="Delete files when removing torrents" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: QBIT_IGNORE_TLS" Target="QBIT_IGNORE_TLS" Default="0" Description="Set to 1 to ignore SSL certificate errors" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: QBIT_DRY_RUN" Target="QBIT_DRY_RUN" Default="0" Description="Set to 1 for testing mode (no actual deletions)" Type="Variable" Display="advanced" Required="false" Mask="false"/>

    <Config Name="Variable: WATCH_POLL_SECONDS" Target="WATCH_POLL_SECONDS" Default="3.0" Description="How often to check qBittorrent for new torrents (seconds)" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: WATCH_PROCESS_EXISTING_AT_START" Target="WATCH_PROCESS_EXISTING_AT_START" Default="0" Description="Process existing torrents when container starts (0 or 1)" Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="Variable: WATCH_RESCAN_KEYWORD" Target="WATCH_RESCAN_KEYWORD" Default="rescan" Description="Keyword in category/tags to force reprocessing" Type="Variable" Display="advanced" Required="false" Mask="false"/>

    <Config Name="Variable: ENABLE_PREAIR_CHECK" Target="ENABLE_PREAIR_CHECK" Default="1" Description="Enable pre-air checking (0 or 1)" Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="Variable: SONARR_URL" Target="SONARR_URL" Default="http://127.0.0.1:8989" Description="Sonarr base URL" Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="Variable: SONARR_APIKEY" Target="SONARR_APIKEY" Default="" Description="Sonarr API key" Type="Variable" Display="always" Required="false" Mask="true"/>
    <Config Name="Variable: SONARR_CATEGORIES" Target="SONARR_CATEGORIES" Default="tv-sonarr" Description="Categories to apply pre-air checks to" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: EARLY_GRACE_HOURS" Target="EARLY_GRACE_HOURS" Default="6" Description="Allow releases this many hours before air date" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: EARLY_HARD_LIMIT_HOURS" Target="EARLY_HARD_LIMIT_HOURS" Default="72" Description="Block releases more than this many hours early" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: WHITELIST_OVERRIDES_HARD_LIMIT" Target="WHITELIST_OVERRIDES_HARD_LIMIT" Default="0" Description="Let whitelisted releases bypass hard limit (0 or 1)" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: EARLY_WHITELIST_GROUPS" Target="EARLY_WHITELIST_GROUPS" Default="" Description="Comma-separated list of trusted release groups" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: EARLY_WHITELIST_INDEXERS" Target="EARLY_WHITELIST_INDEXERS" Default="" Description="Comma-separated list of trusted indexers" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: EARLY_WHITELIST_TRACKERS" Target="EARLY_WHITELIST_TRACKERS" Default="" Description="Comma-separated list of trusted trackers" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: RESUME_IF_NO_HISTORY" Target="RESUME_IF_NO_HISTORY" Default="1" Description="Proceed if Sonarr history not found (0 or 1)" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: SONARR_TIMEOUT_SEC" Target="SONARR_TIMEOUT_SEC" Default="45" Description="HTTP timeout for Sonarr API calls" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: SONARR_RETRIES" Target="SONARR_RETRIES" Default="3" Description="Retry attempts for Sonarr operations" Type="Variable" Display="advanced" Required="false" Mask="false"/>

    <Config Name="Variable: RADARR_URL" Target="RADARR_URL" Default="http://127.0.0.1:7878" Description="Radarr base URL" Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="Variable: RADARR_APIKEY" Target="RADARR_APIKEY" Default="" Description="Radarr API key" Type="Variable" Display="always" Required="false" Mask="true"/>
    <Config Name="Variable: RADARR_CATEGORIES" Target="RADARR_CATEGORIES" Default="radarr" Description="Categories to apply Radarr blocklisting to" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: RADARR_TIMEOUT_SEC" Target="RADARR_TIMEOUT_SEC" Default="45" Description="HTTP timeout for Radarr API calls" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: RADARR_RETRIES" Target="RADARR_RETRIES" Default="3" Description="Retry attempts for Radarr operations" Type="Variable" Display="advanced" Required="false" Mask="false"/>

    <Config Name="Variable: INTERNET_CHECK_PROVIDER" Target="INTERNET_CHECK_PROVIDER" Default="tvmaze" Description="Provider selection: off, tvmaze, tvdb, or both" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: TVMAZE_BASE" Target="TVMAZE_BASE" Default="https://api.tvmaze.com" Description="TVmaze API base URL" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: TVMAZE_TIMEOUT_SEC" Target="TVMAZE_TIMEOUT_SEC" Default="8" Description="HTTP timeout for TVmaze API calls" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: TVDB_BASE" Target="TVDB_BASE" Default="https://api4.thetvdb.com/v4" Description="TheTVDB API base URL" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: TVDB_APIKEY" Target="TVDB_APIKEY" Default="" Description="TheTVDB API key (required for TVDB)" Type="Variable" Display="advanced" Required="false" Mask="true"/>
    <Config Name="Variable: TVDB_PIN" Target="TVDB_PIN" Default="" Description="TheTVDB PIN (optional)" Type="Variable" Display="advanced" Required="false" Mask="true"/>
    <Config Name="Variable: TVDB_LANGUAGE" Target="TVDB_LANGUAGE" Default="eng" Description="Language code for TheTVDB" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: TVDB_ORDER" Target="TVDB_ORDER" Default="default" Description="Episode order: default or official" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: TVDB_TIMEOUT_SEC" Target="TVDB_TIMEOUT_SEC" Default="8" Description="HTTP timeout for TheTVDB API calls" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: TVDB_BEARER" Target="TVDB_BEARER" Default="" Description="Reuse existing bearer token (optional)" Type="Variable" Display="advanced" Required="false" Mask="true"/>

    <Config Name="Variable: ENABLE_ISO_CHECK" Target="ENABLE_ISO_CHECK" Default="1" Description="Enable ISO/disc image cleanup (0 or 1)" Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="Variable: MIN_KEEPABLE_VIDEO_MB" Target="MIN_KEEPABLE_VIDEO_MB" Default="50" Description="Minimum size for video files to keep (MB)" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: METADATA_POLL_INTERVAL" Target="METADATA_POLL_INTERVAL" Default="1.5" Description="Seconds between file list checks during metadata fetching" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: METADATA_MAX_WAIT_SEC" Target="METADATA_MAX_WAIT_SEC" Default="0" Description="Max wait for metadata resolution (0 = infinite)" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: METADATA_DOWNLOAD_BUDGET_BYTES" Target="METADATA_DOWNLOAD_BUDGET_BYTES" Default="0" Description="Max bytes to download during metadata wait (0 = no limit)" Type="Variable" Display="advanced" Required="false" Mask="false"/>

    <Config Name="Variable: GUARD_EXT_STRATEGY" Target="GUARD_EXT_STRATEGY" Default="block" Description="Extension strategy: block or allow" Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="Variable: GUARD_ALLOWED_EXTS" Target="GUARD_ALLOWED_EXTS" Default="" Description="Comma-separated list of allowed extensions (for allow mode)" Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="Variable: GUARD_BLOCKED_EXTS" Target="GUARD_BLOCKED_EXTS" Default="" Description="Comma-separated list of blocked extensions (overrides defaults in block mode)" Type="always" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: GUARD_EXT_DELETE_IF_ALL_BLOCKED" Target="GUARD_EXT_DELETE_IF_ALL_BLOCKED" Default="1" Description="Delete only if all files are disallowed (0 or 1)" Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="Variable: GUARD_EXT_DELETE_IF_ANY_BLOCKED" Target="GUARD_EXT_DELETE_IF_ANY_BLOCKED" Default="0" Description="Delete if any file is disallowed (0 or 1)" Type="Variable" Display="always" Required="false" Mask="false"/>
    <Config Name="Variable: GUARD_EXT_VIOLATION_TAG" Target="GUARD_EXT_VIOLATION_TAG" Default="trash:ext" Description="Tag applied to torrents deleted for extension violations" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: GUARD_DISC_EXTS" Target="GUARD_DISC_EXTS" Default="iso,img,mdf,nrg,cue,bin" Description="Disc image extensions" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: GUARD_EXTS_FILE" Target="GUARD_EXTS_FILE" Default="" Description="Path to JSON config file (optional)" Type="Variable" Display="advanced" Required="false" Mask="false"/>

    <Config Name="Variable: LOG_LEVEL" Target="LOG_LEVEL" Default="INFO" Description="Logging verbosity: INFO or DEBUG" Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: USER_AGENT" Target="USER_AGENT" Default="qbit-guard/2.0" Description="HTTP User-Agent string for API calls" Type="Variable" Display="advanced" Required="false" Mask="false"/>
</Container>