<?xml version="1.0"?>
<Container version="2">
    <Name>binhex-flaresolverr</Name>
	<Beta>false</Beta>
    <Category>Downloaders: MediaApp:Video</Category>
    <Repository>ghcr.io/binhex/arch-flaresolverr</Repository>
    <Registry>https://github.com/binhex/arch-flaresolverr/pkgs/container/arch-flaresolverr</Registry>
    <Network>bridge</Network>
    <Privileged>false</Privileged>
    <ExtraParams>--restart=always</ExtraParams>
    <Shell>bash</Shell>
    <GitHub>https://github.com/binhex/arch-flaresolverr</GitHub>
    <ReadMe>https://github.com/binhex/documentation</ReadMe>
    <Support>https://forums.unraid.net/topic/155853-support-binhex-flaresolverr/</Support>
    <Project>https://github.com/Flaresolverr/Flaresolverr</Project>
    <Overview>FlareSolverr starts a proxy server, and it waits for user requests in an idle state using few resources. When some request arrives, it uses Selenium with the undetected-chromedriver to create a web browser (Chrome). It opens the URL with user parameters and waits until the Cloudflare challenge is solved (or timeout). The HTML code and the cookies are sent back to the user, and those cookies can be used to bypass Cloudflare using other HTTP clients.</Overview>
    <WebUI></WebUI>
    <TemplateURL>https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/flaresolverr.xml</TemplateURL>
    <Icon>https://raw.githubusercontent.com/binhex/docker-templates/master/binhex/images/flaresolverr-icon.png</Icon>
    <DonateText>If you appreciate my work, then please consider buying me a beer :D</DonateText>
    <DonateLink>https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=MM5E27UX6AUU4</DonateLink>
    <DonateImg>https://www.paypal.com/en_US/i/btn/btn_donate_SM.gif</DonateImg>
    <Date>1970-01-01</Date>
    <Changes></Changes>
    <Config Name="Port: Flaresolverr" Target="8191" Default="8191" Mode="tcp" Description="This is the port for the application." Type="Port" Display="always" Required="true" Mask="false"/>

    <Config Name="Path: /config" Target="/config" Default="/mnt/user/appdata/flaresolverr" Mode="rw" Description="This is the container path to your configuration files, e.g. databases, configuration files, logs etc." Type="Path" Display="always" Required="true" Mask="false"/>

    <Config Name="Variable: HEALTHCHECK_COMMAND" Target="HEALTHCHECK_COMMAND" Default="" Description="The command to execute in the healthcheck script, if not specified this will be DNS and HTTPS checks against google.com." Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: HEALTHCHECK_ACTION" Target="HEALTHCHECK_ACTION" Default="" Description="The action to execute if the healthcheck command returns a non zero exit code, if not specified the action will be 'exit 1', if you want the container to exit on failure then set the action to 'kill 1'." Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: HEALTHCHECK_HOSTNAME" Target="HEALTHCHECK_HOSTNAME" Default="google.com" Description="The hostname used when performing HTTPS healthchecking." Type="Variable" Display="advanced" Required="false" Mask="false"/>
    <Config Name="Variable: PUID" Target="PUID" Default="99" Description="User ID for the running container" Type="Variable" Display="advanced" Required="true" Mask="false"/>
    <Config Name="Variable: PGID" Target="PGID" Default="100" Description="Group ID for the running container" Type="Variable" Display="advanced" Required="true" Mask="false"/>
    <Config Name="Variable: UMASK" Target="UMASK" Default="000" Description="UMASK for the running container" Type="Variable" Display="advanced" Required="true" Mask="false"/>
</Container>